{"version":3,"sources":["helpers/api.js","samples/countries.js","components/Form.js","hooks/useForm.js","components/Header.js","assets/icons/Error.js","components/Results.js","containers/App.js","hooks/useFetch.js","reportWebVitals.js","index.js"],"names":["getWeather","city","country","a","url","fetch","response","json","data","console","error","countries","Country","ISO2","Form","addData","initialState","useState","inputs","setInputs","target","name","value","useForm","handleInputChange","reset","setError","onSubmit","e","preventDefault","trim","className","id","htmlFor","type","onChange","placeholder","list","map","item","FormMemo","memo","Header","title","HeaderMemo","Error","props","data-name","xmlns","width","viewBox","d","fill","cx","cy","r","ErrorMemo","Results","cod","main","coord","sys","weather","temp","temp_max","temp_min","src","icon","alt","description","lat","lon","defaultProps","ResultsMemo","App","setData","useCallback","dt","setWeather","useEffect","then","catch","useFetch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAaA,EAAU,uCAAG,WAAOC,EAAMC,GAAb,mBAAAC,EAAA,sEAET,KACG,SACF,mCACRC,EALgB,4DAK2CH,EAL3C,YAKmDC,EALnD,kBAIR,mCAJQ,iBAET,KAFS,kBAGN,UAHM,SAOCG,MAAMD,GAPP,cAOhBE,EAPgB,iBAQHA,EAASC,OARN,eAQhBC,EARgB,yBASfA,GATe,kCAWtBC,QAAQC,MAAM,oBAAd,MAXsB,0DAAH,wD,OCAVC,EAAY,CACvB,CACEC,QAAS,WACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,wBACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,kBACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,2BACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,4BACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,4BACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,6BACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,mBACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,eACTC,KAAM,MAER,CACED,QAAS,iBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,yBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,oBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,iBACTC,KAAM,MAER,CACED,QAAS,8BACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,4BACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,iBACTC,KAAM,MAER,CACED,QAAS,yBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,mBACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,sBACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,kCACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,oBACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,wBACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,iBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,mBACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,6BACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,2BACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,sBACTC,KAAM,MAER,CACED,QAAS,eACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,uBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,eACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,wBACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,qBACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,mBACTC,KAAM,MAER,CACED,QAAS,uBACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,iCACTC,KAAM,MAER,CACED,QAAS,oBACTC,KAAM,MAER,CACED,QAAS,gCACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,+BACTC,KAAM,MAER,CACED,QAAS,qBACTC,KAAM,MAER,CACED,QAAS,sBACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,mBACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,sBACTC,KAAM,MAER,CACED,QAAS,0BACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,eACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,+CACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,2BACTC,KAAM,MAER,CACED,QAAS,iBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,4BACTC,KAAM,MAER,CACED,QAAS,qBACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,8BACTC,KAAM,MAER,CACED,QAAS,eACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,2BACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,iBACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,cACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,qBACTC,KAAM,MAER,CACED,QAAS,mBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,+BACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,4BACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,iCACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,OACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,aACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,kCACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,yBACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,eACTC,KAAM,MAER,CACED,QAAS,+BACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,uBACTC,KAAM,MAER,CACED,QAAS,UACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,gBACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,WACTC,KAAM,MAER,CACED,QAAS,SACTC,KAAM,MAER,CACED,QAAS,YACTC,KAAM,MAER,CACED,QAAS,mBACTC,KAAM,MAER,CACED,QAAS,eACTC,KAAM,MAER,CACED,QAAS,QACTC,KAAM,OC19BJC,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,ECHP,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAChBC,mBAASD,GADO,mBACrCE,EADqC,KAC7BC,EAD6B,KAW5C,MAAO,CAACD,EAJkB,SAAC,GAAgB,IAAdE,EAAa,EAAbA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","file":"static/js/main.a8d0fffd.chunk.js","sourcesContent":["export const getWeather = async (city, country) => {\n  try {\n    const lang = \"es\";\n    const celsius = \"metric\";\n    const appId = \"4e056320039ae5ed96f8f9909d4b66ba\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=${appId}&lang=${lang}&units=${celsius}`;\n\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"GET_WEATHER_ERROR\", error);\n  }\n};\n","export const countries = [\n  {\n    Country: \"Barbados\",\n    ISO2: \"BB\"\n  },\n  {\n    Country: \"Gibraltar\",\n    ISO2: \"GI\"\n  },\n  {\n    Country: \"Lithuania\",\n    ISO2: \"LT\"\n  },\n  {\n    Country: \"Malaysia\",\n    ISO2: \"MY\"\n  },\n  {\n    Country: \"Nauru\",\n    ISO2: \"NR\"\n  },\n  {\n    Country: \"Palestinian Territory\",\n    ISO2: \"PS\"\n  },\n  {\n    Country: \"Qatar\",\n    ISO2: \"QA\"\n  },\n  {\n    Country: \"Solomon Islands\",\n    ISO2: \"SB\"\n  },\n  {\n    Country: \"Sri Lanka\",\n    ISO2: \"LK\"\n  },\n  {\n    Country: \"Turks and Caicos Islands\",\n    ISO2: \"TC\"\n  },\n  {\n    Country: \"Vanuatu\",\n    ISO2: \"VU\"\n  },\n  {\n    Country: \"Wallis and Futuna Islands\",\n    ISO2: \"WF\"\n  },\n  {\n    Country: \"Dominica\",\n    ISO2: \"DM\"\n  },\n  {\n    Country: \"Gambia\",\n    ISO2: \"GM\"\n  },\n  {\n    Country: \"Iran, Islamic Republic of\",\n    ISO2: \"IR\"\n  },\n  {\n    Country: \"Namibia\",\n    ISO2: \"NA\"\n  },\n  {\n    Country: \"Tokelau\",\n    ISO2: \"TK\"\n  },\n  {\n    Country: \"Guinea\",\n    ISO2: \"GN\"\n  },\n  {\n    Country: \"Morocco\",\n    ISO2: \"MA\"\n  },\n  {\n    Country: \"Tunisia\",\n    ISO2: \"TN\"\n  },\n  {\n    Country: \"Azerbaijan\",\n    ISO2: \"AZ\"\n  },\n  {\n    Country: \"Honduras\",\n    ISO2: \"HN\"\n  },\n  {\n    Country: \"Saint-Martin (French part)\",\n    ISO2: \"MF\"\n  },\n  {\n    Country: \"Chad\",\n    ISO2: \"TD\"\n  },\n  {\n    Country: \"Christmas Island\",\n    ISO2: \"CX\"\n  },\n  {\n    Country: \"Costa Rica\",\n    ISO2: \"CR\"\n  },\n  {\n    Country: \"Bulgaria\",\n    ISO2: \"BG\"\n  },\n  {\n    Country: \"Denmark\",\n    ISO2: \"DK\"\n  },\n  {\n    Country: \"Malawi\",\n    ISO2: \"MW\"\n  },\n  {\n    Country: \"Nepal\",\n    ISO2: \"NP\"\n  },\n  {\n    Country: \"Switzerland\",\n    ISO2: \"CH\"\n  },\n  {\n    Country: \"Canada\",\n    ISO2: \"CA\"\n  },\n  {\n    Country: \"China\",\n    ISO2: \"CN\"\n  },\n  {\n    Country: \"Grenada\",\n    ISO2: \"GD\"\n  },\n  {\n    Country: \"Andorra\",\n    ISO2: \"AD\"\n  },\n  {\n    Country: \"Belgium\",\n    ISO2: \"BE\"\n  },\n  {\n    Country: \"Burkina Faso\",\n    ISO2: \"BF\"\n  },\n  {\n    Country: \"Cayman Islands\",\n    ISO2: \"KY\"\n  },\n  {\n    Country: \"Estonia\",\n    ISO2: \"EE\"\n  },\n  {\n    Country: \"Jersey\",\n    ISO2: \"JE\"\n  },\n  {\n    Country: \"Montserrat\",\n    ISO2: \"MS\"\n  },\n  {\n    Country: \"Oman\",\n    ISO2: \"OM\"\n  },\n  {\n    Country: \"Cameroon\",\n    ISO2: \"CM\"\n  },\n  {\n    Country: \"Luxembourg\",\n    ISO2: \"LU\"\n  },\n  {\n    Country: \"Slovakia\",\n    ISO2: \"SK\"\n  },\n  {\n    Country: \"Bosnia and Herzegovina\",\n    ISO2: \"BA\"\n  },\n  {\n    Country: \"Moldova\",\n    ISO2: \"MD\"\n  },\n  {\n    Country: \"Brunei Darussalam\",\n    ISO2: \"BN\"\n  },\n  {\n    Country: \"Eritrea\",\n    ISO2: \"ER\"\n  },\n  {\n    Country: \"Jordan\",\n    ISO2: \"JO\"\n  },\n  {\n    Country: \"Liberia\",\n    ISO2: \"LR\"\n  },\n  {\n    Country: \"Portugal\",\n    ISO2: \"PT\"\n  },\n  {\n    Country: \"Ukraine\",\n    ISO2: \"UA\"\n  },\n  {\n    Country: \"Indonesia\",\n    ISO2: \"ID\"\n  },\n  {\n    Country: \"Kenya\",\n    ISO2: \"KE\"\n  },\n  {\n    Country: \"Georgia\",\n    ISO2: \"GE\"\n  },\n  {\n    Country: \"Iceland\",\n    ISO2: \"IS\"\n  },\n  {\n    Country: \"Jamaica\",\n    ISO2: \"JM\"\n  },\n  {\n    Country: \"Norfolk Island\",\n    ISO2: \"NF\"\n  },\n  {\n    Country: \"French Southern Territories\",\n    ISO2: \"TF\"\n  },\n  {\n    Country: \"Guernsey\",\n    ISO2: \"GG\"\n  },\n  {\n    Country: \"Paraguay\",\n    ISO2: \"PY\"\n  },\n  {\n    Country: \"Tajikistan\",\n    ISO2: \"TJ\"\n  },\n  {\n    Country: \"US Minor Outlying Islands\",\n    ISO2: \"UM\"\n  },\n  {\n    Country: \"Uzbekistan\",\n    ISO2: \"UZ\"\n  },\n  {\n    Country: \"American Samoa\",\n    ISO2: \"AS\"\n  },\n  {\n    Country: \"British Virgin Islands\",\n    ISO2: \"VG\"\n  },\n  {\n    Country: \"Finland\",\n    ISO2: \"FI\"\n  },\n  {\n    Country: \"Malta\",\n    ISO2: \"MT\"\n  },\n  {\n    Country: \"Botswana\",\n    ISO2: \"BW\"\n  },\n  {\n    Country: \"Israel\",\n    ISO2: \"IL\"\n  },\n  {\n    Country: \"Saint Lucia\",\n    ISO2: \"LC\"\n  },\n  {\n    Country: \"Spain\",\n    ISO2: \"ES\"\n  },\n  {\n    Country: \"Argentina\",\n    ISO2: \"AR\"\n  },\n  {\n    Country: \"Congo (Kinshasa)\",\n    ISO2: \"CD\"\n  },\n  {\n    Country: \"Réunion\",\n    ISO2: \"RE\"\n  },\n  {\n    Country: \"Saint-Barthélemy\",\n    ISO2: \"BL\"\n  },\n  {\n    Country: \"Zambia\",\n    ISO2: \"ZM\"\n  },\n  {\n    Country: \"Bahrain\",\n    ISO2: \"BH\"\n  },\n  {\n    Country: \"Chile\",\n    ISO2: \"CL\"\n  },\n  {\n    Country: \"Uruguay\",\n    ISO2: \"UY\"\n  },\n  {\n    Country: \"Yemen\",\n    ISO2: \"YE\"\n  },\n  {\n    Country: \"Austria\",\n    ISO2: \"AT\"\n  },\n  {\n    Country: \"Bangladesh\",\n    ISO2: \"BD\"\n  },\n  {\n    Country: \"Italy\",\n    ISO2: \"IT\"\n  },\n  {\n    Country: \"Micronesia, Federated States of\",\n    ISO2: \"FM\"\n  },\n  {\n    Country: \"Puerto Rico\",\n    ISO2: \"PR\"\n  },\n  {\n    Country: \"Tuvalu\",\n    ISO2: \"TV\"\n  },\n  {\n    Country: \"ALA Aland Islands\",\n    ISO2: \"AX\"\n  },\n  {\n    Country: \"Afghanistan\",\n    ISO2: \"AF\"\n  },\n  {\n    Country: \"Cambodia\",\n    ISO2: \"KH\"\n  },\n  {\n    Country: \"Sao Tome and Principe\",\n    ISO2: \"ST\"\n  },\n  {\n    Country: \"Korea (North)\",\n    ISO2: \"KP\"\n  },\n  {\n    Country: \"New Zealand\",\n    ISO2: \"NZ\"\n  },\n  {\n    Country: \"Turkey\",\n    ISO2: \"TR\"\n  },\n  {\n    Country: \"Greenland\",\n    ISO2: \"GL\"\n  },\n  {\n    Country: \"Hungary\",\n    ISO2: \"HU\"\n  },\n  {\n    Country: \"Australia\",\n    ISO2: \"AU\"\n  },\n  {\n    Country: \"India\",\n    ISO2: \"IN\"\n  },\n  {\n    Country: \"San Marino\",\n    ISO2: \"SM\"\n  },\n  {\n    Country: \"United Kingdom\",\n    ISO2: \"GB\"\n  },\n  {\n    Country: \"Comoros\",\n    ISO2: \"KM\"\n  },\n  {\n    Country: \"Mauritania\",\n    ISO2: \"MR\"\n  },\n  {\n    Country: \"Benin\",\n    ISO2: \"BJ\"\n  },\n  {\n    Country: \"Côte d'Ivoire\",\n    ISO2: \"CI\"\n  },\n  {\n    Country: \"Guadeloupe\",\n    ISO2: \"GP\"\n  },\n  {\n    Country: \"Heard and Mcdonald Islands\",\n    ISO2: \"HM\"\n  },\n  {\n    Country: \"Kiribati\",\n    ISO2: \"KI\"\n  },\n  {\n    Country: \"Mali\",\n    ISO2: \"ML\"\n  },\n  {\n    Country: \"Northern Mariana Islands\",\n    ISO2: \"MP\"\n  },\n  {\n    Country: \"Palau\",\n    ISO2: \"PW\"\n  },\n  {\n    Country: \"Myanmar\",\n    ISO2: \"MM\"\n  },\n  {\n    Country: \"Somalia\",\n    ISO2: \"SO\"\n  },\n  {\n    Country: \"Trinidad and Tobago\",\n    ISO2: \"TT\"\n  },\n  {\n    Country: \"Turkmenistan\",\n    ISO2: \"TM\"\n  },\n  {\n    Country: \"French Guiana\",\n    ISO2: \"GF\"\n  },\n  {\n    Country: \"Lao PDR\",\n    ISO2: \"LA\"\n  },\n  {\n    Country: \"United Arab Emirates\",\n    ISO2: \"AE\"\n  },\n  {\n    Country: \"Albania\",\n    ISO2: \"AL\"\n  },\n  {\n    Country: \"Ireland\",\n    ISO2: \"IE\"\n  },\n  {\n    Country: \"Burundi\",\n    ISO2: \"BI\"\n  },\n  {\n    Country: \"Cape Verde\",\n    ISO2: \"CV\"\n  },\n  {\n    Country: \"Greece\",\n    ISO2: \"GR\"\n  },\n  {\n    Country: \"Guam\",\n    ISO2: \"GU\"\n  },\n  {\n    Country: \"Guatemala\",\n    ISO2: \"GT\"\n  },\n  {\n    Country: \"Korea (South)\",\n    ISO2: \"KR\"\n  },\n  {\n    Country: \"Niger\",\n    ISO2: \"NE\"\n  },\n  {\n    Country: \"Panama\",\n    ISO2: \"PA\"\n  },\n  {\n    Country: \"Saint Helena\",\n    ISO2: \"SH\"\n  },\n  {\n    Country: \"Viet Nam\",\n    ISO2: \"VN\"\n  },\n  {\n    Country: \"Saint Kitts and Nevis\",\n    ISO2: \"KN\"\n  },\n  {\n    Country: \"Seychelles\",\n    ISO2: \"SC\"\n  },\n  {\n    Country: \"Timor-Leste\",\n    ISO2: \"TL\"\n  },\n  {\n    Country: \"Bouvet Island\",\n    ISO2: \"BV\"\n  },\n  {\n    Country: \"El Salvador\",\n    ISO2: \"SV\"\n  },\n  {\n    Country: \"Russian Federation\",\n    ISO2: \"RU\"\n  },\n  {\n    Country: \"Slovenia\",\n    ISO2: \"SI\"\n  },\n  {\n    Country: \"French Polynesia\",\n    ISO2: \"PF\"\n  },\n  {\n    Country: \"Hong Kong, SAR China\",\n    ISO2: \"HK\"\n  },\n  {\n    Country: \"Madagascar\",\n    ISO2: \"MG\"\n  },\n  {\n    Country: \"Nigeria\",\n    ISO2: \"NG\"\n  },\n  {\n    Country: \"Samoa\",\n    ISO2: \"WS\"\n  },\n  {\n    Country: \"British Indian Ocean Territory\",\n    ISO2: \"IO\"\n  },\n  {\n    Country: \"Equatorial Guinea\",\n    ISO2: \"GQ\"\n  },\n  {\n    Country: \"Holy See (Vatican City State)\",\n    ISO2: \"VA\"\n  },\n  {\n    Country: \"Rwanda\",\n    ISO2: \"RW\"\n  },\n  {\n    Country: \"Saint Vincent and Grenadines\",\n    ISO2: \"VC\"\n  },\n  {\n    Country: \"Virgin Islands, US\",\n    ISO2: \"VI\"\n  },\n  {\n    Country: \"Congo (Brazzaville)\",\n    ISO2: \"CG\"\n  },\n  {\n    Country: \"Guyana\",\n    ISO2: \"GY\"\n  },\n  {\n    Country: \"Haiti\",\n    ISO2: \"HT\"\n  },\n  {\n    Country: \"Marshall Islands\",\n    ISO2: \"MH\"\n  },\n  {\n    Country: \"Singapore\",\n    ISO2: \"SG\"\n  },\n  {\n    Country: \"Bhutan\",\n    ISO2: \"BT\"\n  },\n  {\n    Country: \"Ghana\",\n    ISO2: \"GH\"\n  },\n  {\n    Country: \"Mozambique\",\n    ISO2: \"MZ\"\n  },\n  {\n    Country: \"Antigua and Barbuda\",\n    ISO2: \"AG\"\n  },\n  {\n    Country: \"Cocos (Keeling) Islands\",\n    ISO2: \"CC\"\n  },\n  {\n    Country: \"Cyprus\",\n    ISO2: \"CY\"\n  },\n  {\n    Country: \"Latvia\",\n    ISO2: \"LV\"\n  },\n  {\n    Country: \"Lebanon\",\n    ISO2: \"LB\"\n  },\n  {\n    Country: \"Cook Islands\",\n    ISO2: \"CK\"\n  },\n  {\n    Country: \"Isle of Man\",\n    ISO2: \"IM\"\n  },\n  {\n    Country: \"Libya\",\n    ISO2: \"LY\"\n  },\n  {\n    Country: \"Netherlands\",\n    ISO2: \"NL\"\n  },\n  {\n    Country: \"New Caledonia\",\n    ISO2: \"NC\"\n  },\n  {\n    Country: \"Niue\",\n    ISO2: \"NU\"\n  },\n  {\n    Country: \"Thailand\",\n    ISO2: \"TH\"\n  },\n  {\n    Country: \"Egypt\",\n    ISO2: \"EG\"\n  },\n  {\n    Country: \"Faroe Islands\",\n    ISO2: \"FO\"\n  },\n  {\n    Country: \"South Georgia and the South Sandwich Islands\",\n    ISO2: \"GS\"\n  },\n  {\n    Country: \"Algeria\",\n    ISO2: \"DZ\"\n  },\n  {\n    Country: \"Brazil\",\n    ISO2: \"BR\"\n  },\n  {\n    Country: \"Central African Republic\",\n    ISO2: \"CF\"\n  },\n  {\n    Country: \"Czech Republic\",\n    ISO2: \"CZ\"\n  },\n  {\n    Country: \"Ecuador\",\n    ISO2: \"EC\"\n  },\n  {\n    Country: \"Gabon\",\n    ISO2: \"GA\"\n  },\n  {\n    Country: \"Zimbabwe\",\n    ISO2: \"ZW\"\n  },\n  {\n    Country: \"Peru\",\n    ISO2: \"PE\"\n  },\n  {\n    Country: \"Saint Pierre and Miquelon\",\n    ISO2: \"PM\"\n  },\n  {\n    Country: \"Republic of Kosovo\",\n    ISO2: \"XK\"\n  },\n  {\n    Country: \"Tonga\",\n    ISO2: \"TO\"\n  },\n  {\n    Country: \"South Sudan\",\n    ISO2: \"SS\"\n  },\n  {\n    Country: \"Colombia\",\n    ISO2: \"CO\"\n  },\n  {\n    Country: \"Germany\",\n    ISO2: \"DE\"\n  },\n  {\n    Country: \"Lesotho\",\n    ISO2: \"LS\"\n  },\n  {\n    Country: \"Falkland Islands (Malvinas)\",\n    ISO2: \"FK\"\n  },\n  {\n    Country: \"Saudi Arabia\",\n    ISO2: \"SA\"\n  },\n  {\n    Country: \"Aruba\",\n    ISO2: \"AW\"\n  },\n  {\n    Country: \"Swaziland\",\n    ISO2: \"SZ\"\n  },\n  {\n    Country: \"United States of America\",\n    ISO2: \"US\"\n  },\n  {\n    Country: \"Antarctica\",\n    ISO2: \"AQ\"\n  },\n  {\n    Country: \"Cuba\",\n    ISO2: \"CU\"\n  },\n  {\n    Country: \"Monaco\",\n    ISO2: \"MC\"\n  },\n  {\n    Country: \"Serbia\",\n    ISO2: \"RS\"\n  },\n  {\n    Country: \"Anguilla\",\n    ISO2: \"AI\"\n  },\n  {\n    Country: \"Maldives\",\n    ISO2: \"MV\"\n  },\n  {\n    Country: \"Romania\",\n    ISO2: \"RO\"\n  },\n  {\n    Country: \"Uganda\",\n    ISO2: \"UG\"\n  },\n  {\n    Country: \"Japan\",\n    ISO2: \"JP\"\n  },\n  {\n    Country: \"Belarus\",\n    ISO2: \"BY\"\n  },\n  {\n    Country: \"France\",\n    ISO2: \"FR\"\n  },\n  {\n    Country: \"Western Sahara\",\n    ISO2: \"EH\"\n  },\n  {\n    Country: \"Iraq\",\n    ISO2: \"IQ\"\n  },\n  {\n    Country: \"Norway\",\n    ISO2: \"NO\"\n  },\n  {\n    Country: \"Philippines\",\n    ISO2: \"PH\"\n  },\n  {\n    Country: \"Bahamas\",\n    ISO2: \"BS\"\n  },\n  {\n    Country: \"Dominican Republic\",\n    ISO2: \"DO\"\n  },\n  {\n    Country: \"Macao, SAR China\",\n    ISO2: \"MO\"\n  },\n  {\n    Country: \"Bermuda\",\n    ISO2: \"BM\"\n  },\n  {\n    Country: \"Pakistan\",\n    ISO2: \"PK\"\n  },\n  {\n    Country: \"Pitcairn\",\n    ISO2: \"PN\"\n  },\n  {\n    Country: \"Tanzania, United Republic of\",\n    ISO2: \"TZ\"\n  },\n  {\n    Country: \"Bolivia\",\n    ISO2: \"BO\"\n  },\n  {\n    Country: \"Kazakhstan\",\n    ISO2: \"KZ\"\n  },\n  {\n    Country: \"Kyrgyzstan\",\n    ISO2: \"KG\"\n  },\n  {\n    Country: \"Taiwan, Republic of China\",\n    ISO2: \"TW\"\n  },\n  {\n    Country: \"Armenia\",\n    ISO2: \"AM\"\n  },\n  {\n    Country: \"Svalbard and Jan Mayen Islands\",\n    ISO2: \"SJ\"\n  },\n  {\n    Country: \"Sweden\",\n    ISO2: \"SE\"\n  },\n  {\n    Country: \"Togo\",\n    ISO2: \"TG\"\n  },\n  {\n    Country: \"Fiji\",\n    ISO2: \"FJ\"\n  },\n  {\n    Country: \"Martinique\",\n    ISO2: \"MQ\"\n  },\n  {\n    Country: \"Montenegro\",\n    ISO2: \"ME\"\n  },\n  {\n    Country: \"Suriname\",\n    ISO2: \"SR\"\n  },\n  {\n    Country: \"Venezuela (Bolivarian Republic)\",\n    ISO2: \"VE\"\n  },\n  {\n    Country: \"Angola\",\n    ISO2: \"AO\"\n  },\n  {\n    Country: \"Macedonia, Republic of\",\n    ISO2: \"MK\"\n  },\n  {\n    Country: \"Mauritius\",\n    ISO2: \"MU\"\n  },\n  {\n    Country: \"Mayotte\",\n    ISO2: \"YT\"\n  },\n  {\n    Country: \"Senegal\",\n    ISO2: \"SN\"\n  },\n  {\n    Country: \"South Africa\",\n    ISO2: \"ZA\"\n  },\n  {\n    Country: \"Syrian Arab Republic (Syria)\",\n    ISO2: \"SY\"\n  },\n  {\n    Country: \"Liechtenstein\",\n    ISO2: \"LI\"\n  },\n  {\n    Country: \"Netherlands Antilles\",\n    ISO2: \"AN\"\n  },\n  {\n    Country: \"Croatia\",\n    ISO2: \"HR\"\n  },\n  {\n    Country: \"Djibouti\",\n    ISO2: \"DJ\"\n  },\n  {\n    Country: \"Mexico\",\n    ISO2: \"MX\"\n  },\n  {\n    Country: \"Belize\",\n    ISO2: \"BZ\"\n  },\n  {\n    Country: \"Guinea-Bissau\",\n    ISO2: \"GW\"\n  },\n  {\n    Country: \"Mongolia\",\n    ISO2: \"MN\"\n  },\n  {\n    Country: \"Poland\",\n    ISO2: \"PL\"\n  },\n  {\n    Country: \"Ethiopia\",\n    ISO2: \"ET\"\n  },\n  {\n    Country: \"Kuwait\",\n    ISO2: \"KW\"\n  },\n  {\n    Country: \"Nicaragua\",\n    ISO2: \"NI\"\n  },\n  {\n    Country: \"Papua New Guinea\",\n    ISO2: \"PG\"\n  },\n  {\n    Country: \"Sierra Leone\",\n    ISO2: \"SL\"\n  },\n  {\n    Country: \"Sudan\",\n    ISO2: \"SD\"\n  }\n];\n","import { memo, useState } from \"react\";\nimport { func } from \"prop-types\";\nimport { useForm } from \"../hooks/useForm\";\nimport { countries } from \"../samples/countries\";\n\nconst Form = ({ addData }) => {\n  const [inputs, handleInputChange, reset] = useForm({ city: \"\", country: \"\" });\n  const { city, country } = inputs;\n\n  const [error, setError] = useState(false);\n\n  const submit = e => {\n    e.preventDefault();\n\n    if (city.trim() === \"\" || country.trim() === \"\") {\n      setError(true);\n      return;\n    }\n\n    addData({ city, country }); // inputs.\n    setError(false);\n    reset();\n  };\n\n  return (\n    <form onSubmit={submit}>\n      <div className=\"content-inputs\">\n        <label id=\"label-city\" htmlFor=\"city\">\n          Ciudad:\n        </label>\n        <input\n          id=\"city\"\n          type=\"text\"\n          name=\"city\"\n          value={city}\n          onChange={handleInputChange}\n          placeholder=\"Agregar ciudad...\"\n        />\n\n        <label id=\"label-country\" htmlFor=\"country\">\n          País:\n        </label>\n        <input\n          id=\"country\"\n          type=\"text\"\n          name=\"country\"\n          value={country}\n          list=\"countries\"\n          onChange={handleInputChange}\n          placeholder=\"Agregar país...\"\n        />\n        <datalist id=\"countries\">\n          {countries.map(item => (\n            <option key={item.ISO2} value={item.ISO2}>\n              {item.Country}\n            </option>\n          ))}\n        </datalist>\n\n        <button type=\"submit\">Buscar clima</button>\n      </div>\n      {error && <p className=\"error\">Los campos están vacíos</p>}\n    </form>\n  );\n};\n\nForm.propTypes = {\n  addData: func.isRequired\n};\n\nconst FormMemo = memo(Form);\nexport { FormMemo as Form };\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [inputs, setInputs] = useState(initialState);\n\n  const reset = () => {\n    setInputs(initialState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n  };\n\n  return [inputs, handleInputChange, reset];\n};\n","import { memo } from \"react\";\nimport { string } from \"prop-types\";\n\nconst Header = ({ title }) => {\n  return (\n    <header>\n      <h1>{title}</h1>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: string.isRequired\n};\n\nconst HeaderMemo = memo(Header);\nexport { HeaderMemo as Header };\n","import { memo } from \"react\";\n\nconst Error = props => (\n  <svg\n    data-name=\"Layer 1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"50em\"\n    viewBox=\"0 0 903.815 419\"\n    {...props}\n  >\n    <path\n      d=\"M854.206 417.135c-7.669-.319-14.656-3.414-17.816-8.208q-.222-.337-.418-.683c-1.154-2.043-1.514-4.392-.253-6.405s4.414-3.542 7.579-3.224 5.636 2.842 4.326 4.84c-.292-4.038-.532-8.281 2.724-11.796a11.897 11.897 0 016.665-3.445c6.56-1.154 10.916 2.556 11.788 6.301.644 2.765-.245 5.577-1.13 8.31 2.728-3.226 9.218-4.661 14.187-3.137s7.727 5.794 6.03 9.336c-2.001 4.173-8.67 6.33-14.863 7.47-5.115.941-12.785.891-18.82.64zM587.206 417.135c-7.669-.319-14.656-3.414-17.816-8.208q-.222-.337-.418-.683c-1.154-2.043-1.514-4.392-.253-6.405s4.414-3.542 7.579-3.224 5.636 2.842 4.326 4.84c-.292-4.038-.532-8.281 2.724-11.796a11.897 11.897 0 016.665-3.445c6.56-1.154 10.916 2.556 11.788 6.301.644 2.765-.245 5.577-1.13 8.31 2.728-3.226 9.218-4.661 14.187-3.137s7.727 5.794 6.03 9.336c-2.001 4.173-8.67 6.33-14.863 7.47-5.115.941-12.785.891-18.82.64zM341.5 176.5h-55A16.519 16.519 0 01270 160V57a16.519 16.519 0 0116.5-16.5h55A16.519 16.519 0 01358 57v103a16.519 16.519 0 01-16.5 16.5z\"\n      fill=\"#f2f2f2\"\n    />\n    <path\n      fill=\"#ffb8b8\"\n      d=\"M679.306 406.177h-12.259l-5.833-47.288 18.094.001-.002 47.287z\"\n    />\n    <path\n      d=\"M682.433 418.062l-39.53-.002v-.5a15.386 15.386 0 0115.386-15.386h24.145z\"\n      fill=\"#2f2e41\"\n    />\n    <path\n      fill=\"#ffb8b8\"\n      d=\"M816.262 394.707l-11.557 4.092-21.285-42.627 17.056-6.04 15.786 44.575z\"\n    />\n    <path\n      d=\"M823.176 404.865l-37.262 13.197-.167-.472a15.386 15.386 0 019.366-19.64h.001l22.76-8.06zM678.965 390.3a4.613 4.613 0 01-.82-.074l-14.992-2.726a4.521 4.521 0 01-3.698-4.337c-2.18-100.914 8.535-168.728 31.844-217.336a4.473 4.473 0 014.69-2.481l53.912 7.783a4.505 4.505 0 013.828 3.947l4.754 41.904a3.546 3.546 0 00.142.666l51.689 154.869a4.52 4.52 0 01-2.866 5.63l-13.968 4.657a4.523 4.523 0 01-5.449-2.257l-69.918-131.837a1.5 1.5 0 00-2.807.35l-31.961 137.705a4.482 4.482 0 01-4.38 3.537z\"\n      fill=\"#2f2e41\"\n    />\n    <path\n      d=\"M636.357 84.097a10.527 10.527 0 01.24 1.64l42.957 24.782 10.441-6.01 11.131 14.572-17.45 12.437a8 8 0 01-9.598-.234L629.781 96.34a10.497 10.497 0 116.576-12.242z\"\n      fill=\"#ffb8b8\"\n    />\n    <path\n      d=\"M680.144 108.042a4.495 4.495 0 012.211-3.025l19.713-11.022a12.497 12.497 0 0115.327 19.744l-15.717 16.32a4.5 4.5 0 01-6.804-.372l-13.884-17.994a4.495 4.495 0 01-.846-3.65z\"\n      fill=\"#f9a826\"\n    />\n    <circle cx={726.05} cy={57.066} r={24.561} fill=\"#ffb8b8\" />\n    <path\n      d=\"M749.966 176.368a4.5 4.5 0 01-.728-.06l-53.153-8.713a4.5 4.5 0 01-3.674-5.374l2.586-12.191c-1.324-1.975-12.103-19.146 1.025-35.275a22.01 22.01 0 0120.434-22.922l27.469-2.087a22.127 22.127 0 0123.022 27.885l-12.593 55.237a4.51 4.51 0 01-4.388 3.5z\"\n      fill=\"#f9a826\"\n    />\n    <path\n      d=\"M799.602 222.558a10.743 10.743 0 00-4.27-15.909l-30.264-93.047-17.538 8.322 33.113 90.599a10.8 10.8 0 0018.96 10.035z\"\n      fill=\"#ffb8b8\"\n    />\n    <path\n      d=\"M771.762 129.093l-23.288 7.035a4.817 4.817 0 01-6.158-3.908l-3.536-23.995a13.377 13.377 0 0125.634-7.662l10.313 21.866a4.817 4.817 0 01-2.965 6.664z\"\n      fill=\"#f9a826\"\n    />\n    <path d=\"M702.175 58.014a30.443 30.443 0 0032.211-6.764c-2.576 6.807-1.856 35.674-1.856 35.674s22.847-10.847 25.946-12.743c18.307-11.205-6.942-59.943-27.946-52.257-3.558 1.302-6.529 2.834-7.968 6.338-3.136-3.869-9.073-4.708-13.64-2.72s-7.813 6.293-9.559 10.957a27.407 27.407 0 001.993 23.114z\" />\n    <path\n      d=\"M595 0H33A33.032 33.032 0 000 33v154a33.032 33.032 0 0033 33h562a33.032 33.032 0 0033-33V33a33.032 33.032 0 00-33-33zm31 187a31.04 31.04 0 01-31 31H33a31.04 31.04 0 01-31-31V33A31.04 31.04 0 0133 2h562a31.04 31.04 0 0131 31z\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M88.75 145.5a12 12 0 1112-12 12.014 12.014 0 01-12 12zm0-22a10 10 0 1010 10 10.011 10.011 0 00-10-10zM88.356 118.5a1 1 0 01-1-1V106a1 1 0 012 0v11.5a1 1 0 01-1 1zM72.75 134.106h-11.5a1 1 0 010-2h11.5a1 1 0 110 2zM114.75 134.106h-11.5a1 1 0 010-2h11.5a1 1 0 010 2zM102.934 123.172a1 1 0 01-.696-1.717l4.816-4.673a1 1 0 011.392 1.436l-4.816 4.672a.996.996 0 01-.696.282zM73.566 123.172a.997.997 0 01-.696-.282l-4.816-4.672a1 1 0 111.392-1.436l4.816 4.673a1 1 0 01-.696 1.717zM69.75 150.5a1 1 0 01-.718-1.697l4.816-4.96a1 1 0 011.435 1.394l-4.815 4.96a.999.999 0 01-.718.303zM108.75 151.5a.995.995 0 01-.716-.302l-5.815-5.96a1 1 0 111.43-1.396l5.817 5.96a1 1 0 01-.716 1.698zM88.356 161.5a1 1 0 01-1-1V149a1 1 0 012 0v11.5a1 1 0 01-1 1zM219.164 152.5h-33.382a13.002 13.002 0 010-26h2.553a15.707 15.707 0 0114.138-9 15.866 15.866 0 0115.697 15h.994a10.001 10.001 0 010 20zm-33.382-24a11.002 11.002 0 000 22h33.382a8.002 8.002 0 000-16H217.2a1 1 0 01-1-1 13.881 13.881 0 00-13.727-14 13.725 13.725 0 00-12.575 8.395 1 1 0 01-.919.605zM330.671 133.557l-.779-1.842a10.002 10.002 0 10-13.14-13.027l-1.849-.763a12.002 12.002 0 1115.768 15.632z\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M332.164 152.5h-33.382a13.002 13.002 0 010-26h2.553a15.707 15.707 0 0114.138-9 15.866 15.866 0 0115.697 15h.994a10.001 10.001 0 010 20zm-33.382-24a11.002 11.002 0 000 22h33.382a8.002 8.002 0 000-16H330.2a1 1 0 01-1-1 13.881 13.881 0 00-13.727-14 13.725 13.725 0 00-12.575 8.395 1 1 0 01-.919.605zM445.164 147.5h-4.014a1 1 0 010-2h4.014a8.002 8.002 0 000-16H443.2a1 1 0 01-1-1 13.881 13.881 0 00-13.727-14 13.725 13.725 0 00-12.575 8.395 1 1 0 01-.919.605h-3.197a11.002 11.002 0 000 22h3.1a1 1 0 010 2h-3.1a13.002 13.002 0 010-26h2.553a15.707 15.707 0 0114.138-9 15.866 15.866 0 0115.697 15h.994a10.001 10.001 0 010 20z\"\n      fill=\"#3f3d56\"\n    />\n    <path\n      d=\"M428.307 151.817a1 1 0 01-1-1v-11.5a1 1 0 112 0v11.5a1 1 0 01-1 1zM421.307 157.817a1 1 0 01-1-1v-11.5a1 1 0 112 0v11.5a1 1 0 01-1 1zM435.307 160.817a1 1 0 01-1-1v-11.5a1 1 0 112 0v11.5a1 1 0 01-1 1zM558.164 147.5h-4.014a1 1 0 010-2h4.014a8.002 8.002 0 000-16H556.2a1 1 0 01-1-1 13.881 13.881 0 00-13.727-14 13.725 13.725 0 00-12.575 8.395 1 1 0 01-.919.605h-3.197a11.002 11.002 0 000 22h3.1a1 1 0 110 2h-3.1a13.002 13.002 0 010-26h2.553a15.707 15.707 0 0114.138-9 15.866 15.866 0 0115.697 15h.994a10.001 10.001 0 010 20z\"\n      fill=\"#3f3d56\"\n    />\n    <circle cx={539.75} cy={142.75} r={2.25} fill=\"#3f3d56\" />\n    <circle cx={547.25} cy={145.75} r={2.25} fill=\"#3f3d56\" />\n    <circle cx={534.75} cy={149.25} r={2.25} fill=\"#3f3d56\" />\n    <circle cx={542.75} cy={154.25} r={2.25} fill=\"#3f3d56\" />\n    <path\n      d=\"M117 71.5H59a8 8 0 010-16h58a8 8 0 010 16zM230 71.5h-58a8 8 0 110-16h58a8 8 0 010 16zM343 71.5h-58a8 8 0 110-16h58a8 8 0 010 16zM456 71.5h-58a8 8 0 010-16h58a8 8 0 010 16zM569 71.5h-58a8 8 0 010-16h58a8 8 0 010 16z\"\n      fill=\"#f9a826\"\n    />\n    <path\n      d=\"M142 165.5a1 1 0 01-1-1v-76a1 1 0 012 0v76a1 1 0 01-1 1zM255 164.5a1 1 0 01-1-1v-76a1 1 0 012 0v76a1 1 0 01-1 1zM374 164.5a1 1 0 01-1-1v-76a1 1 0 012 0v76a1 1 0 01-1 1zM487 164.5a1 1 0 01-1-1v-76a1 1 0 012 0v76a1 1 0 01-1 1z\"\n      fill=\"#e6e6e6\"\n    />\n    <path d=\"M902.815 419h-381a1 1 0 110-2h381a1 1 0 010 2z\" fill=\"#3f3d56\" />\n  </svg>\n);\n\nconst ErrorMemo = memo(Error);\nexport { ErrorMemo as Error };\n","import { memo } from \"react\";\nimport { shape } from \"prop-types\";\nimport { Error } from \"../assets/icons/Error\";\n\nconst Results = ({ data }) => {\n  const { cod, name, main, coord, sys, weather } = data;\n\n  return (\n    <div className=\"container\">\n      {cod !== \"404\" ? (\n        <>\n          <h1>{name}</h1>\n          <div className=\"card-content\">\n            <div className=\"card\">\n              <h2>Temperatura</h2>\n              <p>El clima de {name} es:</p>\n              <h2 className=\"text-shadow\">{main && main.temp} &#176;C</h2>\n              <p>Máxima: {main && main.temp_max} &#176;C</p>\n              <p>Minima: {main && main.temp_min} &#176;C</p>\n            </div>\n\n            <div className=\"card\">\n              <h2>Clima</h2>\n              {weather &&\n                weather.map(item => (\n                  <div key={item.id}>\n                    <img\n                      className=\"img-weather\"\n                      src={`https://openweathermap.org/img/wn/${item.icon}@2x.png`}\n                      alt=\"Clima\"\n                    />\n                    <p className=\"description\">{item.description}</p>\n                  </div>\n                ))}\n            </div>\n\n            <div className=\"card\">\n              <h2>Coordenadas</h2>\n              <p>El país es:</p>\n              <h2 className=\"text-shadow\">{sys && sys.country}</h2>\n              <p>Latitud: {coord && coord.lat}</p>\n              <p>Longitud: {coord && coord.lon}</p>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>\n          <h1>No se encontraron resultados</h1>\n          <div className=\"card-content\">\n            <Error />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  data: shape({})\n};\n\nResults.defaultProps = {\n  data: {}\n};\n\nconst ResultsMemo = memo(Results);\nexport { ResultsMemo as Results };\n","import { useState, useCallback } from \"react\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { Header, Form, Results } from \"../components/index\";\n\nconst App = () => {\n  const [data, setData] = useState({ city: \"Guadalajara\", country: \"MX\" });\n\n  const addData = useCallback(\n    dt => {\n      setData(() => ({ ...dt }));\n    },\n    [setData]\n  );\n\n  const { city, country } = data;\n  const weather = useFetch(city, country);\n\n  return (\n    <>\n      <Header title=\"Aplicación del clima\" />\n      <Form addData={addData} />\n      <Results data={weather} />\n    </>\n  );\n};\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport { getWeather } from \"../helpers/api\";\n\nexport const useFetch = (city, country) => {\n  const [weather, setWeather] = useState({});\n\n  useEffect(() => {\n    getWeather(city, country)\n      .then(d => setWeather(d))\n      .catch(error => console.error(\"USE_FETCH_ERROR\", error));\n  }, [city, country]);\n\n  return weather;\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}